{"version":3,"sources":["components/Item/ImagePopup.module.scss","components/Item/Item.module.scss","components/Item/Itemlist.module.scss","components/Item/ImagePopup.tsx","components/Item/Item.tsx","components/Item/Itemlist.tsx","App.tsx","index.tsx"],"names":["module","exports","ImagePopup","item","handleClosePopup","className","s","imagePopup","type","onClick","imagePopup__wrap","imagePopup__image","src","image","alt","title","description","Item","useState","openImage","setOpenImage","item__image","item__content","price","Itemlist","items","itemlist","itemlist__wrap","map","i","id","getProducts","a","fetch","json","App","useQuery","data","isLoading","error","console","log","client","QueryClient","ReactDOM","render","document","getElementById"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,iBAAmB,qCAAqC,kBAAoB,wC,mBCA1ID,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,4B,mBCA1DD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,eAAiB,mC,oICQ5DC,EAAa,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,iBAC9B,OACI,mCACI,sBAAKC,UAAWC,IAAEC,WAAlB,UACI,wBAAQC,KAAK,SAASC,QAAS,kBAAML,KAArC,uBACA,sBAAKC,UAAWC,IAAEI,iBAAlB,UACI,qBAAKL,UAAWC,IAAEK,kBAAlB,SACI,qBAAKC,IAAKT,EAAKU,MAAOC,IAAKX,EAAKY,UAEpC,6BAAKZ,EAAKY,QACV,4BAAIZ,EAAKa,uB,iBCHhBC,EAAO,SAAC,GAAoB,IAAnBd,EAAkB,EAAlBA,KAClB,EAAkCe,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAoBA,OACI,sBAAKf,UAAWC,IAAEH,KAAlB,UACI,qBAAKE,UAAWC,IAAEe,YAAlB,SACI,qBAAKT,IAAKT,EAAKU,MAAOC,IAAKX,EAAKY,MAAON,QAAS,kBAAMW,GAAa,QAEtED,GACG,cAAC,EAAD,CAAYhB,KAAMA,EAAMC,iBAAkB,kBAAMgB,GAAa,MAGjE,sBAAKf,UAAWC,IAAEgB,cAAlB,UACI,6BAAKnB,EAAKY,QACV,4BAAIZ,EAAKoB,e,iBCjCZC,EAAW,SAAC,GAA4B,IAA3BT,EAA0B,EAA1BA,MAAOU,EAAmB,EAAnBA,MAa7B,OACI,sBAAKpB,UAAWC,IAAEoB,SAAlB,UACKX,GAAS,6BAAKA,IAEf,qBAAKV,UAAWC,IAAEqB,eAAlB,gBACKF,QADL,IACKA,OADL,EACKA,EAAOG,KAAI,SAACzB,EAAM0B,GAAP,OACR,cAAC,EAAD,CAAoB1B,KAAMA,GAAfA,EAAK2B,aCxB9BC,EAAW,uCAAG,sBAAAC,EAAA,sEACPC,MAAM,qCADC,8BACqCC,OADrC,mFAAH,qDAwBFC,EApBH,WAEV,MAAiCC,mBAAyB,WAAYL,GAA/DM,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,MAIxB,OAHAC,QAAQC,IAAI,SAAUJ,GAGnBC,EACM,mDAELC,EACK,kDAIP,qBAAKlC,UAAU,MAAf,SACE,cAAC,EAAD,CAAUU,MAAM,eAAYU,MAAOY,OCxBnCK,EAAS,IAAIC,cAEnBC,IAASC,OACP,cAAC,sBAAD,CAAqBH,OAAQA,EAA7B,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.623ad620.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imagePopup\":\"ImagePopup_imagePopup__3j9-R\",\"imagePopup__wrap\":\"ImagePopup_imagePopup__wrap__1qXAF\",\"imagePopup__image\":\"ImagePopup_imagePopup__image__3o-9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Item_item__mBWUP\",\"item__image\":\"Item_item__image__7Rxuy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemlist\":\"Itemlist_itemlist__2vrIT\",\"itemlist__wrap\":\"Itemlist_itemlist__wrap__2Kfx8\"};","import { CartItemType } from '../../types/CartItemType';\n\nimport s from './ImagePopup.module.scss';\n\ntype IProp = {\n    item: CartItemType;\n    handleClosePopup: () => void;\n}\n\nexport const ImagePopup = ({item, handleClosePopup}: IProp) => {\n    return (\n        <>\n            <div className={s.imagePopup}>\n                <button type=\"button\" onClick={() => handleClosePopup()}>Loka gaur</button>\n                <div className={s.imagePopup__wrap}>\n                    <div className={s.imagePopup__image}>            \n                        <img src={item.image} alt={item.title} />\n                    </div>\n                    <h3>{item.title}</h3>\n                    <p>{item.description}</p>\n                    {/* <button type=\"button\" onClick={() => handleNext(item.id)}>Næsti gaur</button> */}\n                </div>\n            </div>\n        </>\n    );\n};","\nimport { useState } from 'react';\n\nimport { ImagePopup } from './ImagePopup';\n\n// Types\nimport { CartItemType } from '../../types/CartItemType';\n\n// Styles\nimport s from './Item.module.scss';\n\ntype IProps = {\n   item: CartItemType;\n   //handleNext: (id: number) => void;\n}\n\nexport const Item = ({item}: IProps) => {\n    const [openImage, setOpenImage] = useState(false);\n    \n    //const [selectedItem, setSelectedItem] = useState(item);\n\n    // const openNextItem = (id: number) => {\n    //     console.log('CartItemType: ', id);\n\n    //     //return item[3];\n    //     //setSelectedItem(prev => {\n\n    //         // return prev.map(item => (\n    //         //     item.id === selItem.id ? { ...item, amount: item.amount + 1} : item\n    //         //   ))\n    //         // return prev.map(item => (\n    //         //     item.id === prev.find(item => item.id == selItem.id);\n    //         // ))\n    //         //return [...prev, {...selItem}];\n    //     //})\n    // }\n\n    return (\n        <div className={s.item}>\n            <div className={s.item__image}>\n                <img src={item.image} alt={item.title} onClick={() => setOpenImage(true)} />\n            </div>\n            {openImage && \n                <ImagePopup item={item} handleClosePopup={() => setOpenImage(false)}  />\n                // <ImagePopup item={selectedItem} handleClosePopup={() => setOpenImage(false)} handleNext={handleNext} />\n            }\n            <div className={s.item__content}>\n                <h3>{item.title}</h3>\n                <p>{item.price}</p>\n            </div>\n        </div>\n    );\n};","// Component\nimport { Item } from './Item';\n//import { ImagePopup } from './ImagePopup';\n\n// Types\nimport { CartItemType } from '../../types/CartItemType';\n\n// Style\nimport s from './Itemlist.module.scss';\n\ntype IProps = {\n    title?: string;\n    items?: CartItemType[];\n}\n\nexport const Itemlist = ({title, items}: IProps) => {\n    \n    // const openNextItem = (id: number) => {            \n    //     if( items === undefined)\n    //         return;\n\n    //     const curItm = items?.find(e => e.id === id);\n    //     const index = items?.indexOf(curItm as CartItemType);\n\n    //     return items[index+1];\n    // }\n\n    //console.log('items', items);\n    return (\n        <div className={s.itemlist}>\n            {title && <h1>{title}</h1>}\n\n            <div className={s.itemlist__wrap}>\n                {items?.map((item, i) => (\n                    <Item key={item.id} item={item}  />\n                ))}\n            </div>\n\n            \n        </div>\n    );\n};","import React from 'react';\nimport { useQuery } from 'react-query';\nimport { Itemlist } from './components/Item/Itemlist';\n\n// Types\nimport { CartItemType } from './types/CartItemType';\n\n\n\n\nconst getProducts = async (): Promise<CartItemType[]> => \nawait (await fetch('https://fakestoreapi.com/products')).json();\n\n\nconst App = () => {\n\n  const {data, isLoading, error} = useQuery<CartItemType[]>('products', getProducts);\n  console.log('Data: ', data);\n  \n\n  if(isLoading) {\n    return <div>Sækja lista..</div>;\n  }\n  if( error ) {\n    return <div>Einhver villa..</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <Itemlist title=\"Vörulisti\" items={data} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={client}>\n    <App />\n  </QueryClientProvider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}